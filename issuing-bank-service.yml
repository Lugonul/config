app:
  schema-name: &schema-name issuing_bank_service
  cache:
    ttl-seconds: 600

server:
  port: 8083


keycloak:
  auth-server-url: http://keycloak:8080
  realm: bank-realm
  resource: issuing_bank_service  # Уникальное имя для каждого сервиса
  credentials:
    secret: spVbSSMQAZhpwFZHEF6Kq02sp3n22POB
  bearer-only: true  # Только проверка токенов
  jwks-url: http://keycloak:8080/realms/bank-realm/protocol/openid-connect/certs

logging:
  level:
    root: INFO
    com.meshakin: DEBUG
  file:
    name: logs/issuing-bank.log
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8001/eureka/
  instance:
    prefer-ip-address: true

spring:
  rabbitmq:
    host: rabbitmq
    port: 5672
    username: guest
    password: guest
    rabbitmq:
      template:
        exchange: bank.exchange
      listener:
        direct:
          missing-queues-fatal: false

  data:
    redis:
      host: redis_cache_payment_system
      port: 6379

  datasource:
    url: jdbc:postgresql://postgres_db_payment_system:5432/mydb?currentSchema=issuing_bank_service
    username: admin
    password: admin
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    properties:
      hibernate:
        default_schema: *schema-name # Используем якорь

  liquibase:
    change-log: classpath:/db/changelog/db/changelog-master.xml
    default-schema: *schema-name
    liquibase-schema: *schema-name
    parameters:
      schemaName: *schema-name # Один параметр для всех миграций
    contexts: dev # Контекст выполнения


  cache:
    type: redis
    redis:
      time-to-live: ${app.cache.ttl-seconds}s

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    url: /v3/api-docs
    operationsSorter: alpha
    tagsSorter: alpha